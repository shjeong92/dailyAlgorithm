from itertools import product
d_num = [0,1,2,3]
#모든 칸에대해서 움직일 수 있는 좌표 밑 해당 좌표의 값들
board = [
    [0,1,2,3,4,5], 
    [2,2,3,4,5,6], 
    [4,3,4,5,6,7], 
    [6,4,5,6,7,8], 
    [8,5,6,7,8,9], 
    [10,21,22,23,24,25], 
    [12,7,8,9,10,11], 
    [14,8,9,10,11,12], 
    [16,9,10,11,12,13], 
    [18,10,11,12,13,14], 
    [20,27,28,24,25,26], 
    [22,12,13,14,15,16], 
    [24,13,14,15,16,17], 
    [26,14,15,16,17,18], 
    [28,15,16,17,18,19], 
    [30,29,30,31,24,25], 
    [32,17,18,19,20,32], 
    [34,18,19,20,32,32], 
    [36,19,20,32,32,32], 
    [38,20,32,32,32,32], 
    [40,32,32,32,32,32], 
    [13,22,23,24,25,26], 
    [16,23,24,25,26,20], 
    [19,24,25,26,20,32], 
    [25,25,26,20,32,32], 
    [30,26,20,32,32,32], 
    [35,20,32,32,32,32], 
    [22,28,24,25,26,20], 
    [24,24,25,26,20,32], 
    [28,30,31,24,25,26], 
    [27,31,24,25,26,20], 
    [26,24,25,26,20,32], 
    [0,32,32,32,32,32]
]
answer = 0
#주사위 열번 던진 값들
move = list(map(int,input().split()))
#주사위 번호 중복순열 구하기
for li in product(d_num,repeat=10):
    #각 경우의수에대해서 주사이가 어디에 있나 확인하기위한 사전
    d_pos = {0:0,1:0,2:0,3:0}
    result = 0
    out = False
    for i in range(10):
        #움직일 주사위번호
        dice_num = li[i]
        #움직일 칸수
        move_num = move[i]
        #다음칸의 좌표 구하기
        next_pos = board[d_pos[dice_num]][move_num]
        #만약 다음칸에 이미 다른 주사위가 있으면 탈출 (32번째칸은 도착칸이므로 무시)
        if next_pos in d_pos.values() and next_pos!= 32:
            out = True
            break
        #도착한 칸의 점수
        score = board[next_pos][0]
        #사전에 위치 움직인 주사위 위치 갱신해주기
        d_pos[dice_num] = next_pos
        #점수 더하기
        result+=score
    #만약 반복문을 중도탈출한적이 없으면 열개를 제대로 움직인경우이다
    if not out:
        #최댓값으로 정답갱신해주기
        answer = max(result,answer)
print(answer)


